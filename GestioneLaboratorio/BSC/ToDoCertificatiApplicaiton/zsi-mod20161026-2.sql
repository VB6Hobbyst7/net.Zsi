IF NOT EXISTS( SELECT * FROM INFORMATION_SCHEMA.columns WHERE table_name = 'DESTINAZIONIDIVERSE' AND COLUMN_NAME = 'CODSPED')
	ALTER TABLE DESTINAZIONIDIVERSE ADD CODSPED DECIMAL(5)
GO

IF NOT EXISTS( SELECT * FROM INFORMATION_SCHEMA.columns WHERE table_name = 'ZSI_NOTECLI' AND COLUMN_NAME = 'NOTECOSIGNEE')
	ALTER TABLE ZSI_NOTECLI ADD NOTECOSIGNEE VARCHAR(1000)
GO

IF NOT EXISTS( SELECT * FROM INFORMATION_SCHEMA.columns WHERE table_name = 'ZSI_NOTECLI' AND COLUMN_NAME = 'NOTENOTIFY')
	ALTER TABLE ZSI_NOTECLI ADD NOTENOTIFY VARCHAR(1000)
GO

IF NOT EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'EXTRATESTEDOC' AND COLUMN_NAME = 'NOTECONTAINER')
	ALTER TABLE EXTRATESTEDOC ADD NOTECONTAINER VARCHAR(1000)
GO





ALTER PROCEDURE [dbo].[ITA_SP_UPDATE_DATISPEDIZIONE]
(

@idtesta DECIMAL(10)
, @idriga DECIMAL(5)
, @codsped AS DECIMAL(5)
, @qtaspedibile AS DECIMAL(16,6)
, @disponibilita AS DECIMAL(16,6)
, @posizionamento AS VARCHAR(50)
, @nrlotto AS VARCHAR(50)
, @magstatoriga AS SMALLINT 
, @magstatom05 SMALLINT
, @notecli VARCHAR(3000)
, @noteart VARCHAR(3000)
, @notemag VARCHAR(3000)
, @annotazioni VARCHAR(100)
, @coddestdiv DECIMAL(5)
, @noteconsignee VARCHAR(1000)
, @notenotify VARCHAR(1000)
, @notecontainer VARCHAR(1000)

)
AS

BEGIN

	SET NOCOUNT ON

	DECLARE @codart VARCHAR(50)
	SELECT @codart = CODART FROM RIGHEDOCUMENTI WHERE IDTESTA = @idtesta AND IDRIGA = @idriga

	DECLARE @codcli VARCHAR(7)
	SELECT @codcli = CODCLIFOR, @coddestdiv = (CASE WHEN ISNULL(NUMDESTDIVERSAMERCI, 0) = 0 THEN -1 ELSE NUMDESTDIVERSAMERCI END) 
	FROM TESTEDOCUMENTI WHERE PROGRESSIVO = @idtesta 

	DECLARE @esistenota SMALLINT
	
	UPDATE EXTRATESTEDOC 
	SET notecontainer = @notecontainer
	WHERE IDTESTA = @idtesta
	
	-- aggiornamento dati riga
	UPDATE RIGHEDOCUMENTI
	SET ANNOTAZIONI = @annotazioni
	WHERE IDTESTA = @idtesta AND idriga = @idriga


	-- aggiornamento dati extra
	UPDATE EXTRARIGHEDOC
	SET DISPONIBILITA = @disponibilita
	, NRLOTTO = @nrlotto
	, POSIZIONAMENTO = @posizionamento
	--, CONFEZIONATO = @confezionato
	, QTASPEDIBILE = @qtaspedibile
	, MAGSTATOM05 = @magstatom05
	, MAGSTATORIGA = @magstatoriga
	, NOTEMAG = @notemag
	WHERE IDTESTA = @idtesta AND idriga = @idriga
	

	
	SELECT @esistenota = count(*) FROM ZSI_NOTEART
	WHERE CODART = @codart AND CODCLI = @codcli AND CODDEST = @coddestdiv
	
	IF (@esistenota = 0)
	BEGIN
		INSERT INTO dbo.ZSI_NOTEART (CODCLI, CODDEST, CODART, NOTE, UTENTEMODIFICA, DATAMODIFICA)
		VALUES (@codcli, @coddestdiv, @codart, @noteart, 'trm', getdate())
	END
	

	UPDATE ZSI_NOTEART
	SET NOTE = @noteart
	WHERE CODART = @codart AND CODCLI = @codcli AND CODDEST = @coddestdiv




	SELECT @esistenota = count(*) FROM ZSI_NOTECLI
	WHERE CODCLI = @codcli AND CODDEST = @coddestdiv
	
	IF (@esistenota = 0)
	BEGIN
		INSERT INTO dbo.ZSI_NOTECLI (CODCLI, NOTE, UTENTEMODIFICA, DATAMODIFICA, CODDEST, NOTECOSIGNEE, NOTENOTIFY)
		VALUES (@codcli, @notecli, 'trm', getdate(), @coddestdiv, @noteconsignee, @notenotify)
	END
		

	UPDATE ZSI_NOTECLI
	SET NOTE = @notecli
	, NOTECOSIGNEE =  @noteconsignee
	, NOTENOTIFY = @notenotify
	WHERE CODCLI = @codcli AND CODDEST = @coddestdiv

	
	-- aggiornamento spedizioniere
	DELETE FROM SPEDIZDOCUMENTI WHERE IDTESTA = @idtesta
	
	INSERT INTO dbo.SPEDIZDOCUMENTI (IDTESTA, POSSPED, POSIZIONE, CODSPED, RAGSOCSPED, INDIRIZZOSPED, CAPSPED, LOCALITASPED, PROVSPED, UTENTEMODIFICA, DATAMODIFICA, PARTITAIVA, CODNAZIONE, NUMALBOTR)
	SELECT @idtesta, @idriga, 1, @codsped, RAGIONESOCIALE, indirizzo, CAP, LOCALITA, PROVINCIA, 'trm', getdate(), PARTITAIVA, CODNAZIONE, NUMALBOTR
	FROM TABSPEDIZ WHERE CODICE = @codsped
			
			
	RETURN

END
GO

GRANT EXECUTE ON dbo.ITA_SP_UPDATE_DATISPEDIZIONE TO Metodo98
GO




IF OBJECT_ID ('dbo.ZS_SPLITLOTTI') IS NOT NULL
	DROP TABLE dbo.ZS_SPLITLOTTI
GO

CREATE TABLE dbo.ZS_SPLITLOTTI
	(
	IDTESTA                 DECIMAL (10) NOT NULL,
	IDRIGA                  INT NOT NULL,
	QTAGEST                 DECIMAL (16, 6) DEFAULT (0) NOT NULL,
	DATACONSEGNA            DATETIME NULL,
	NUMCOLLI                DECIMAL (16, 6) DEFAULT (0) NOT NULL,
	NRLOTTO              VARCHAR (30) NOT NULL,
	UTENTEMODIFICA          VARCHAR (25) NOT NULL,
	DATAMODIFICA            DATETIME NOT NULL,
	CONSTRAINT PK_ZS_SPLITLOTTI PRIMARY KEY (IDTESTA, IDRIGA, NRLOTTO)
	WITH (FILLFACTOR = 90)
	)
GO


GRANT DELETE ON dbo.ZS_SPLITLOTTI TO Metodo98
GO
GRANT INSERT ON dbo.ZS_SPLITLOTTI TO Metodo98
GO
GRANT REFERENCES ON dbo.ZS_SPLITLOTTI TO Metodo98
GO
GRANT SELECT ON dbo.ZS_SPLITLOTTI TO Metodo98
GO
GRANT UPDATE ON dbo.ZS_SPLITLOTTI TO Metodo98
GO


IF OBJECT_ID ('dbo.ITA_SP_UPDATE_DATISPEDIZIONE_LOTTO') IS NOT NULL
	DROP PROCEDURE dbo.ITA_SP_UPDATE_DATISPEDIZIONE_LOTTO
GO

CREATE PROCEDURE [dbo].[ITA_SP_UPDATE_DATISPEDIZIONE_LOTTO]
(

@idtesta DECIMAL(10)
, @idriga DECIMAL(5)
, @qtaspedibile AS DECIMAL(16,6)
, @nrlotto AS VARCHAR(50)
, @dataconsegna VARCHAR(100)


)
AS

BEGIN

	SET NOCOUNT ON


	INSERT INTO dbo.ZS_SPLITLOTTI (IDTESTA, IDRIGA, QTAGEST, DATACONSEGNA, NUMCOLLI, NRLOTTO, UTENTEMODIFICA, DATAMODIFICA)
	VALUES (@idtesta, @idriga, @qtaspedibile, @dataconsegna, 0, @nrlotto, 'TRM', GETDATE())
			
	RETURN

END
GO

GRANT EXECUTE ON dbo.ITA_SP_UPDATE_DATISPEDIZIONE_LOTTO TO Metodo98
GO





IF OBJECT_ID ('dbo.EXCEL_PORTAFOGLIOORDINI') IS NOT NULL
	DROP VIEW dbo.EXCEL_PORTAFOGLIOORDINI
GO

create view EXCEL_PORTAFOGLIOORDINI as 
SELECT 
        R.DATACONSEGNA
        , (CASE WHEN datediff(d, getdate(), R.DATACONSEGNA) < -7 THEN -7 ELSE datediff(d, getdate(), R.DATACONSEGNA) END) AS gg_dataconsegna 
        , (CASE WHEN ACF.STATOBOLLE = 2 THEN '[BLOCCATO] ' ELSE '' END) + AC.DSCCONTO1 AS RAGIONESOCIALE
        , T.TIPODOC + '/' + CAST(T.ESERCIZIO AS VARCHAR) + '/' + CAST(T.NUMERODOC AS VARCHAR) AS DOCUMENTO -- + '/' + CAST(R.POSIZIONE AS VARCHAR) AS DOCUMENTO 
        , T.NUMRIFDOC, ET.RIFCLI 
        , R.CODART AS ARTICOLO
        , R.DESCRIZIONEART AS DESCRIZIONE
 		, I.DESCRIZIONE IMBALLO 
        , CAST(R.QTAGESTRES AS INT) AS QTAGESTRES
        , CAST(R.NRPEZZIIMBALLO AS INT) AS NRPEZZIIMBALLO
        , CAST(
        		(CASE WHEN ISNULL(R.NRPEZZIIMBALLO,0) = 0 THEN 0 
        				ELSE ceiling(R.QTAGESTRES/R.NRPEZZIIMBALLO) 
        				END)
         AS INT) FUSTI 
        , isnull(ER.NRLOTTO, 'NESSUN LOTTO') AS NRLOTTO
        , SD.RAGSOCSPED AS SPEDIZIONIERE
        , (CASE WHEN ISNULL(ER.NOTECLI,'') <> '' THEN ER.NOTECLI ELSE NC.NOTE END) NOTECLI 
        , (CASE WHEN ISNULL(ER.NOTEART,'') <> '' THEN ER.NOTEART ELSE NA.NOTE END) NOTEART 
        , ER.NOTEMAG, '' MAGAZZINO 
        , ER.POSIZIONAMENTO
        , isnull(ER.CONFEZIONATO, 0) AS CONFEZIONATO
        , isnull(ER.DISPONIBILITA, 0) AS DISPONIBILITA 
        , isnull(z.QTAGEST, isnull(ER.QTASPEDIBILE, 0)) AS QTASPEDIBILE
        , isnull((CASE WHEN CAST(R.NRPEZZIIMBALLO AS INT) > 0 THEN ER.QTASPEDIBILE/CAST(R.NRPEZZIIMBALLO AS INT) ELSE 0 END), 0) AS COLLISPEDIBILI
        , '' AS TIPOPALLET
        , '' AS ETICHETTATURA
        , T.ESERCIZIO, T.TIPODOC, T.NUMERODOC, T.BIS, T.DATADOC 
        , 'ALFREDO.DEANGELO@GMAIL.COM;knosmailservice@gmail.com' AS EMAIL_CLIENTE --s.ferrigato@zschimmer-schwarz.com;m.michieletti@zschimmer-schwarz.com;
        , T.PROGRESSIVO AS IDTESTA, R.IDRIGA 
        , AA.GRUPPO, AA.CATEGORIA, AA.CODCATEGORIASTAT 
        , T.CODCLIFOR
        , T.DATARIFDOC
        , I.CODICE CODIMBALLO
        , isnull(SD.CODSPED, 0) AS CODSPED
        , R.UMGEST
        , ER.DATACARICO
        , ISNULL(ER.MAGSTATORIGA, 0) AS MAGSTATORIGA
        , ISNULL(ER.MAGSTATOM05, 0) AS MAGSTATOM05
        , (CASE WHEN ISNULL(ER.MAGSTATORIGA, 0) = 0 THEN '-'
	        WHEN ISNULL(ER.MAGSTATORIGA, 0) = 1 THEN 'INTERAMENTE'
	        WHEN ISNULL(ER.MAGSTATORIGA, 0) = 2 THEN 'PARZIALMENTE'
	        WHEN ISNULL(ER.MAGSTATORIGA, 0) = 3 THEN 'NON SPEDIBILE'
	        ELSE '-' END) AS DSCMAGSTATORIGA
        , (CASE WHEN ISNULL(ER.MAGSTATOM05, 0) = 0 THEN 'INSERITO'
	        WHEN ER.MAGSTATOM05 = 1 THEN 'CONTR. DISP.'
	        WHEN ER.MAGSTATOM05 = 2 THEN 'MANDATO A TRASP.'
	        WHEN ER.MAGSTATOM05 = 3 THEN 'APPRONTATA SPED'
	        WHEN ER.MAGSTATOM05 = 4 THEN 'ASSEGNATI LOTTI'
	        ELSE '-' END) AS DSCMAGSTATOM05
        , (CASE WHEN isnull(EXTRACLIENTI.CLIENTESPECIALE, 'N') = 'S' THEN 1 ELSE 0 END) AS CLIENTESPECIALE
        , T.NUMDESTDIVERSAMERCI
        , R.ANNOTAZIONI
        , ET.NOTECONTAINER
        , (CASE WHEN T.RAGSOCDDM IS NULL THEN 
        		AC.DSCCONTO1 + ' ' + AC.INDIRIZZO + ' ' + AC.LOCALITA + ' ' + AC.PROVINCIA 
        	ELSE
        		t.RAGSOCDDM + ' ' + t.INDIRIZZODDM + ' ' + t.LOCALITADDM + ' ' + t.PROVINCIADDM 
        	END) AS DESTINAZIONE
        , (CASE WHEN isnull(ET.NOTECONTAINER ,'') <> '' THEN 'M14' 
        			WHEN r.CODIMBALLO IN (100, 101) THEN 'M13' 
        			ELSE 'M12' 
			END) AS MODULO
		, ARTADR.NUMONU
        , ARTADR.CLASSEADR
        , '''' + CAST(DAY(ER.DATACARICO) AS VARCHAR) + '/' + CAST(MONTH(ER.DATACARICO) AS VARCHAR) + '/' + CAST(YEAR(ER.DATACARICO) AS VARCHAR) AS XLS_DATACARICO
        , '''' + CAST(DAY(R.DATACONSEGNA) AS VARCHAR) + '/' + CAST(MONTH(R.DATACONSEGNA) AS VARCHAR) + '/' + CAST(YEAR(R.DATACONSEGNA) AS VARCHAR) AS XLS_DATACONSEGNA
        , AC.DSCCONTO1 AS XLS_CLIENTE
        , (CASE WHEN ISNULL(T.RAGSOCDDM, '') = '' THEN 
        		AC.DSCCONTO1 + ' ' + AC.INDIRIZZO + ' ' + AC.LOCALITA + ' ' + AC.PROVINCIA 
        	ELSE
        		t.RAGSOCDDM + ' ' + t.INDIRIZZODDM + ' ' + t.LOCALITADDM + ' ' + t.PROVINCIADDM 
        	END) AS XLS_DESTINAZIONE
        , (CAST(CAST(isnull((CASE WHEN CAST(R.NRPEZZIIMBALLO AS INT) > 0 THEN ER.QTASPEDIBILE/CAST(R.NRPEZZIIMBALLO AS INT) ELSE 0 END), 0) AS INT) AS VARCHAR) + ' ' + I.DESCRIZIONE) AS XLS_TIPOIMBALLO
        , isnull(ER.NRLOTTO, 'NESSUN LOTTO') AS XLS_NRLOTTO
        , ISNULL(ARTADR.NUMONU, '') AS XLS_NUMONU
        , ISNULL(ARTADR.CLASSEADR, 'NO') AS XLS_CLASSEADR
        , ISNULL((SELECT TOP 1 TABSPEDIZ.RAGIONESOCIALE FROM  TABSPEDIZ WHERE TABSPEDIZ.CODICE = isnull(SD.CODSPED, 0)), '') AS XLS_SPEDIZIONIERE
        , R.ANNOTAZIONI AS XLS_NOTE
        , (CASE WHEN ISNULL(ER.NOTEART,'') <> '' THEN ER.NOTEART ELSE NA.NOTE END) XLS_NOTEART 
        , ER.NOTEMAG AS XLS_NOTEMAG
        , 0 AS XLS_COSTO
        , ISNULL(NC.NOTECOSIGNEE, '') AS XLS_NOTECONSIGNEE
        , ISNULL(NC.NOTENOTIFY, '') AS XLS_NOTENOTIFY
        
        
FROM TESTEDOCUMENTI T JOIN EXTRATESTEDOC ET ON T.PROGRESSIVO = ET.IDTESTA 
JOIN RIGHEDOCUMENTI R ON T.PROGRESSIVO = R.IDTESTA 
JOIN ANAGRAFICACF AC ON AC.CODCONTO = T.CODCLIFOR 
JOIN EXTRACLIENTI ON EXTRACLIENTI.CODCONTO = AC.CODCONTO
JOIN ANAGRAFICAARTICOLI AA ON AA.CODICE = R.CODART 
JOIN EXTRARIGHEDOC ER ON ER.IDTESTA = R.IDTESTA AND ER.IDRIGA = R.IDRIGA 
JOIN ANAGRAFICARISERVATICF ACF ON ACF.ESERCIZIO = YEAR(GETDATE()) AND ACF.CODCONTO = T.CODCLIFOR 
LEFT OUTER JOIN ZS_SPLITLOTTI z ON Z.IDTESTA = r.IDTESTA AND z.idriga = r.IDRIGA
LEFT OUTER JOIN TAB_ARTICOLIADR ARTADR ON ARTADR.CODART = R.CODART
LEFT OUTER JOIN TABIMBALLI I ON R.CODIMBALLO = I.CODICE 
LEFT OUTER JOIN ZSI_NOTECLI NC ON T.CODCLIFOR = NC.CODCLI AND (T.NUMDESTDIVERSAMERCI = NC.CODDEST OR (T.NUMDESTDIVERSAMERCI = 0 AND NC.CODDEST = -1) OR (T.NUMDESTDIVERSAMERCI <> 0 AND NOT EXISTS(SELECT 1 FROM ZSI_NOTECLI Z WHERE Z.CODCLI = T.CODCLIFOR AND Z.CODDEST = T.NUMDESTDIVERSAMERCI) AND NC.CODDEST = -1) ) 
LEFT OUTER JOIN ZSI_NOTEART NA ON T.CODCLIFOR = NA.CODCLI AND (T.NUMDESTDIVERSAMERCI = NA.CODDEST OR (T.NUMDESTDIVERSAMERCI = 0 AND NC.CODDEST = -1) OR (T.NUMDESTDIVERSAMERCI <> 0 AND NOT EXISTS(SELECT 1 FROM ZSI_NOTECLI Z WHERE Z.CODCLI = T.CODCLIFOR AND Z.CODDEST = T.NUMDESTDIVERSAMERCI) AND NC.CODDEST = -1) ) AND R.CODART = NA.CODART 
LEFT OUTER JOIN SPEDIZDOCUMENTI SD ON SD.IDTESTA = t.PROGRESSIVO
WHERE 
	(t.tipodoc = 'occ' OR t.tipodoc = 'oce') and 
	(R.TIPORIGA = 'N' OR R.TIPORIGA = 'O') AND 
	R.QTAGESTRES > 0 
--AND datediff(d, getdate(), R.DATACONSEGNA)  < 200 
--AND r.codimballo NOT IN (100, 101)
GO

GRANT DELETE ON dbo.EXCEL_PORTAFOGLIOORDINI TO Metodo98
GO
GRANT INSERT ON dbo.EXCEL_PORTAFOGLIOORDINI TO Metodo98
GO
GRANT REFERENCES ON dbo.EXCEL_PORTAFOGLIOORDINI TO Metodo98
GO
GRANT SELECT ON dbo.EXCEL_PORTAFOGLIOORDINI TO Metodo98
GO
GRANT UPDATE ON dbo.EXCEL_PORTAFOGLIOORDINI TO Metodo98
GO


SELECT * FROM EXCEL_PORTAFOGLIOORDINI WHERE ESERCIZIO= 2016




IF OBJECT_ID ('dbo.ZS_RICHIESTAPRODUZIONE') IS NOT NULL
	DROP TABLE dbo.ZS_RICHIESTAPRODUZIONE
GO

CREATE TABLE dbo.ZS_RICHIESTAPRODUZIONE
	(
	IDTESTA                 DECIMAL (10) NOT NULL,
	IDRIGA                  INT NOT NULL,
	UTENTEMODIFICA          VARCHAR (25) NOT NULL,
	DATAMODIFICA            DATETIME NOT NULL,
	CONSTRAINT PK_ZS_RICHIESTAPRODUZIONE PRIMARY KEY (IDTESTA, IDRIGA)
	WITH (FILLFACTOR = 90)
	)
GO


GRANT DELETE ON dbo.ZS_RICHIESTAPRODUZIONE TO Metodo98
GO
GRANT INSERT ON dbo.ZS_RICHIESTAPRODUZIONE TO Metodo98
GO
GRANT REFERENCES ON dbo.ZS_RICHIESTAPRODUZIONE TO Metodo98
GO
GRANT SELECT ON dbo.ZS_RICHIESTAPRODUZIONE TO Metodo98
GO
GRANT UPDATE ON dbo.ZS_RICHIESTAPRODUZIONE TO Metodo98
GO



IF OBJECT_ID ('dbo.ITA_SP_UPDATE_RICHIESTAPRODUZIONE') IS NOT NULL
	DROP PROCEDURE dbo.ITA_SP_UPDATE_RICHIESTAPRODUZIONE
GO

CREATE PROCEDURE [dbo].[ITA_SP_UPDATE_RICHIESTAPRODUZIONE]
(

@idtesta DECIMAL(10)
, @idriga DECIMAL(5)
)
AS

BEGIN

	SET NOCOUNT ON


	INSERT INTO dbo.ZS_RICHIESTAPRODUZIONE (IDTESTA, IDRIGA, UTENTEMODIFICA, DATAMODIFICA)
	VALUES (@idtesta, @idriga, 'TRM', GETDATE())
			
	RETURN

END
GO

GRANT EXECUTE ON dbo.ITA_SP_UPDATE_RICHIESTAPRODUZIONE TO Metodo98
GO




IF OBJECT_ID ('dbo.EXCEL_RICHIESTAPRODUZIONE') IS NOT NULL
	DROP VIEW dbo.EXCEL_RICHIESTAPRODUZIONE
GO

create view EXCEL_RICHIESTAPRODUZIONE as 
SELECT 
        R.DATACONSEGNA
        , (CASE WHEN datediff(d, getdate(), R.DATACONSEGNA) < -7 THEN -7 ELSE datediff(d, getdate(), R.DATACONSEGNA) END) AS gg_dataconsegna 
        , (CASE WHEN ACF.STATOBOLLE = 2 THEN '[BLOCCATO] ' ELSE '' END) + AC.DSCCONTO1 AS RAGIONESOCIALE
        , T.TIPODOC + '/' + CAST(T.ESERCIZIO AS VARCHAR) + '/' + CAST(T.NUMERODOC AS VARCHAR) AS DOCUMENTO -- + '/' + CAST(R.POSIZIONE AS VARCHAR) AS DOCUMENTO 
        , T.NUMRIFDOC, ET.RIFCLI 
        , R.CODART AS ARTICOLO
        , R.DESCRIZIONEART AS DESCRIZIONE
 		, I.DESCRIZIONE IMBALLO 
        , CAST(R.QTAGESTRES AS INT) AS QTAGESTRES
        , CAST(R.NRPEZZIIMBALLO AS INT) AS NRPEZZIIMBALLO
        , CAST(
        		(CASE WHEN ISNULL(R.NRPEZZIIMBALLO,0) = 0 THEN 0 
        				ELSE ceiling(R.QTAGESTRES/R.NRPEZZIIMBALLO) 
        				END)
         AS INT) FUSTI 
        , isnull(ER.NRLOTTO, 'NESSUN LOTTO') AS NRLOTTO
        , SD.RAGSOCSPED AS SPEDIZIONIERE
        , (CASE WHEN ISNULL(ER.NOTECLI,'') <> '' THEN ER.NOTECLI ELSE NC.NOTE END) NOTECLI 
        , (CASE WHEN ISNULL(ER.NOTEART,'') <> '' THEN ER.NOTEART ELSE NA.NOTE END) NOTEART 
        , ER.NOTEMAG, '' MAGAZZINO 
        , ER.POSIZIONAMENTO
        , isnull(ER.CONFEZIONATO, 0) AS CONFEZIONATO
        , isnull(ER.DISPONIBILITA, 0) AS DISPONIBILITA 
        --, isnull(z.QTAGEST, isnull(ER.QTASPEDIBILE, 0)) AS QTASPEDIBILE
        , isnull((CASE WHEN CAST(R.NRPEZZIIMBALLO AS INT) > 0 THEN ER.QTASPEDIBILE/CAST(R.NRPEZZIIMBALLO AS INT) ELSE 0 END), 0) AS COLLISPEDIBILI
        , '' AS TIPOPALLET
        , '' AS ETICHETTATURA
        , T.ESERCIZIO, T.TIPODOC, T.NUMERODOC, T.BIS, T.DATADOC 
        , 'ALFREDO.DEANGELO@GMAIL.COM;knosmailservice@gmail.com' AS EMAIL_CLIENTE --s.ferrigato@zschimmer-schwarz.com;m.michieletti@zschimmer-schwarz.com;
        , T.PROGRESSIVO AS IDTESTA, R.IDRIGA 
        , AA.GRUPPO, AA.CATEGORIA, AA.CODCATEGORIASTAT 
        , T.CODCLIFOR
        , T.DATARIFDOC
        , I.CODICE CODIMBALLO
        , isnull(SD.CODSPED, 0) AS CODSPED
        , R.UMGEST
        , ER.DATACARICO
        , ISNULL(ER.MAGSTATORIGA, 0) AS MAGSTATORIGA
        , ISNULL(ER.MAGSTATOM05, 0) AS MAGSTATOM05
        , (CASE WHEN ISNULL(ER.MAGSTATORIGA, 0) = 0 THEN '-'
	        WHEN ISNULL(ER.MAGSTATORIGA, 0) = 1 THEN 'INTERAMENTE'
	        WHEN ISNULL(ER.MAGSTATORIGA, 0) = 2 THEN 'PARZIALMENTE'
	        WHEN ISNULL(ER.MAGSTATORIGA, 0) = 3 THEN 'NON SPEDIBILE'
	        ELSE '-' END) AS DSCMAGSTATORIGA
        , (CASE WHEN ISNULL(ER.MAGSTATOM05, 0) = 0 THEN 'INSERITO'
	        WHEN ER.MAGSTATOM05 = 1 THEN 'CONTR. DISP.'
	        WHEN ER.MAGSTATOM05 = 2 THEN 'MANDATO A TRASP.'
	        WHEN ER.MAGSTATOM05 = 3 THEN 'APPRONTATA SPED'
	        WHEN ER.MAGSTATOM05 = 4 THEN 'ASSEGNATI LOTTI'
	        ELSE '-' END) AS DSCMAGSTATOM05
        , (CASE WHEN isnull(EXTRACLIENTI.CLIENTESPECIALE, 'N') = 'S' THEN 1 ELSE 0 END) AS CLIENTESPECIALE
        , T.NUMDESTDIVERSAMERCI
        , R.ANNOTAZIONI
        , ET.NOTECONTAINER
        , (CASE WHEN T.RAGSOCDDM IS NULL THEN 
        		AC.DSCCONTO1 + ' ' + AC.INDIRIZZO + ' ' + AC.LOCALITA + ' ' + AC.PROVINCIA 
        	ELSE
        		t.RAGSOCDDM + ' ' + t.INDIRIZZODDM + ' ' + t.LOCALITADDM + ' ' + t.PROVINCIADDM 
        	END) AS DESTINAZIONE
        , (CASE WHEN isnull(ET.NOTECONTAINER ,'') <> '' THEN 'M14' 
        			WHEN r.CODIMBALLO IN (100, 101) THEN 'M13' 
        			ELSE 'M12' 
			END) AS MODULO
		, ARTADR.NUMONU
        , ARTADR.CLASSEADR
        , '''' + CAST(DAY(ER.DATACARICO) AS VARCHAR) + '/' + CAST(MONTH(ER.DATACARICO) AS VARCHAR) + '/' + CAST(YEAR(ER.DATACARICO) AS VARCHAR) AS XLS_DATACARICO
        , '''' + CAST(DAY(R.DATACONSEGNA) AS VARCHAR) + '/' + CAST(MONTH(R.DATACONSEGNA) AS VARCHAR) + '/' + CAST(YEAR(R.DATACONSEGNA) AS VARCHAR) AS XLS_DATACONSEGNA
        , AC.DSCCONTO1 AS XLS_CLIENTE
        , (CASE WHEN ISNULL(T.RAGSOCDDM, '') = '' THEN 
        		AC.DSCCONTO1 + ' ' + AC.INDIRIZZO + ' ' + AC.LOCALITA + ' ' + AC.PROVINCIA 
        	ELSE
        		t.RAGSOCDDM + ' ' + t.INDIRIZZODDM + ' ' + t.LOCALITADDM + ' ' + t.PROVINCIADDM 
        	END) AS XLS_DESTINAZIONE
        , (CAST(CAST(isnull((CASE WHEN CAST(R.NRPEZZIIMBALLO AS INT) > 0 THEN ER.QTASPEDIBILE/CAST(R.NRPEZZIIMBALLO AS INT) ELSE 0 END), 0) AS INT) AS VARCHAR) + ' ' + I.DESCRIZIONE) AS XLS_TIPOIMBALLO
        , isnull(ER.NRLOTTO, 'NESSUN LOTTO') AS XLS_NRLOTTO
        , ISNULL(ARTADR.NUMONU, '') AS XLS_NUMONU
        , ISNULL(ARTADR.CLASSEADR, 'NO') AS XLS_CLASSEADR
        , ISNULL((SELECT TOP 1 TABSPEDIZ.RAGIONESOCIALE FROM  TABSPEDIZ WHERE TABSPEDIZ.CODICE = isnull(SD.CODSPED, 0)), '') AS XLS_SPEDIZIONIERE
        , R.ANNOTAZIONI AS XLS_NOTE
        , (CASE WHEN ISNULL(ER.NOTEART,'') <> '' THEN ER.NOTEART ELSE NA.NOTE END) XLS_NOTEART 
        , ER.NOTEMAG AS XLS_NOTEMAG
        , 0 AS XLS_COSTO
        , ISNULL(NC.NOTECOSIGNEE, '') AS XLS_NOTECONSIGNEE
        , ISNULL(NC.NOTENOTIFY, '') AS XLS_NOTENOTIFY
        
        
FROM TESTEDOCUMENTI T JOIN EXTRATESTEDOC ET ON T.PROGRESSIVO = ET.IDTESTA 
JOIN RIGHEDOCUMENTI R ON T.PROGRESSIVO = R.IDTESTA 
JOIN ANAGRAFICACF AC ON AC.CODCONTO = T.CODCLIFOR 
JOIN EXTRACLIENTI ON EXTRACLIENTI.CODCONTO = AC.CODCONTO
JOIN ANAGRAFICAARTICOLI AA ON AA.CODICE = R.CODART 
JOIN EXTRARIGHEDOC ER ON ER.IDTESTA = R.IDTESTA AND ER.IDRIGA = R.IDRIGA 
JOIN ANAGRAFICARISERVATICF ACF ON ACF.ESERCIZIO = YEAR(GETDATE()) AND ACF.CODCONTO = T.CODCLIFOR 
JOIN ZS_RICHIESTAPRODUZIONE z ON Z.IDTESTA = r.IDTESTA AND z.idriga = r.IDRIGA
LEFT OUTER JOIN TAB_ARTICOLIADR ARTADR ON ARTADR.CODART = R.CODART
LEFT OUTER JOIN TABIMBALLI I ON R.CODIMBALLO = I.CODICE 
LEFT OUTER JOIN ZSI_NOTECLI NC ON T.CODCLIFOR = NC.CODCLI AND (T.NUMDESTDIVERSAMERCI = NC.CODDEST OR (T.NUMDESTDIVERSAMERCI = 0 AND NC.CODDEST = -1) OR (T.NUMDESTDIVERSAMERCI <> 0 AND NOT EXISTS(SELECT 1 FROM ZSI_NOTECLI Z WHERE Z.CODCLI = T.CODCLIFOR AND Z.CODDEST = T.NUMDESTDIVERSAMERCI) AND NC.CODDEST = -1) ) 
LEFT OUTER JOIN ZSI_NOTEART NA ON T.CODCLIFOR = NA.CODCLI AND (T.NUMDESTDIVERSAMERCI = NA.CODDEST OR (T.NUMDESTDIVERSAMERCI = 0 AND NC.CODDEST = -1) OR (T.NUMDESTDIVERSAMERCI <> 0 AND NOT EXISTS(SELECT 1 FROM ZSI_NOTECLI Z WHERE Z.CODCLI = T.CODCLIFOR AND Z.CODDEST = T.NUMDESTDIVERSAMERCI) AND NC.CODDEST = -1) ) AND R.CODART = NA.CODART 
LEFT OUTER JOIN SPEDIZDOCUMENTI SD ON SD.IDTESTA = t.PROGRESSIVO
WHERE r.tipodoc IN ('occ', 'oce') and R.TIPORIGA IN ('N','O') --AND R.QTAGESTRES > 0 
--AND datediff(d, getdate(), R.DATACONSEGNA)  < 200 
--AND r.codimballo NOT IN (100, 101)
GO

GRANT DELETE ON dbo.EXCEL_RICHIESTAPRODUZIONE TO Metodo98
GO
GRANT INSERT ON dbo.EXCEL_RICHIESTAPRODUZIONE TO Metodo98
GO
GRANT REFERENCES ON dbo.EXCEL_RICHIESTAPRODUZIONE TO Metodo98
GO
GRANT SELECT ON dbo.EXCEL_RICHIESTAPRODUZIONE TO Metodo98
GO
GRANT UPDATE ON dbo.EXCEL_RICHIESTAPRODUZIONE TO Metodo98
GO


