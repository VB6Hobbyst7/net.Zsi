-- POST IMPORTAZIONE
IF NOT EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.columns WHERE TABLE_NAME = 'EXTRAMAG' AND COLUMN_NAME = 'ESAURITO')
	ALTER TABLE EXTRAMAG ADD ESAURITO VARCHAR(1)
GO

UPDATE EXTRAMAG 
SET ESAURITO = 'S'
WHERE RIGHT(CODART, 3) = 'XXX'
GO


UPDATE a1
SET A1.ScontiPremi = A2.ScontiPremi 
	, A1.SpTrasp = a2.SpTrasp
	, a1.Provvi = a2.Provvi
	, a1.Imballi = a2.Imballi
	, a1.Amministrazione = a2.Amministrazione
	, a1.SpVendita = a2.SpVendita
	, a1.SpMagazzino = a2.SpMagazzino
	, a1.SpeseProd = a2.SpeseProd
	, a1.CostoAggiunto = a2.CostoAggiunto
	, a1.Preleva = a2.Preleva
	, a1.TestMateriePrime = a2.TestMateriePrime
	, a1.TOL = a2.TOL
	, a1.FLAG_BOLLETTINO = a2.FLAG_BOLLETTINO
	, a1.SCOSTAMENTO_PRZ = a2.SCOSTAMENTO_PRZ
	, a1.XLS_CHEMDES = a2.XLS_CHEMDES
	, a1.XLS_CASNR = a2.XLS_CASNR
	, a1.XLS_ORGGOODS = a2.XLS_ORGGOODS
	, a1.XLS_ORGFORMULA = a2.XLS_ORGFORMULA
	, a1.XLS_VARORGFORMULA = a2.XLS_VARORGFORMULA 
	, a1.XLS_OPDIVISION = a2.XLS_OPDIVISION
	, a1.XLS_COSTDIRWAGES = a2.XLS_COSTDIRWAGES
	, a1.XLS_COSTPRODOVERHEAD = a2.XLS_COSTPRODOVERHEAD
	, a1.XLS_COSTRAWMAT = a2.XLS_COSTRAWMAT
	, a1.XLS_COSTRAWMAT_VEN = a2.XLS_COSTRAWMAT_VEN
	, a1.FLAG_ADR = a2.FLAG_ADR
	, a1.PATH_SCHEDASICUREZZA_ITA = a2.PATH_SCHEDASICUREZZA_ITA
	, a1.PATH_SCHEDASICUREZZA_EST = a2.PATH_SCHEDASICUREZZA_EST
	, a1.MACRO_ART = a2.MACRO_ART
	, a1.PRV_VAR = a2.PRV_VAR
	, a1.BSCKNOS = a2.BSCKNOS
	, a1.FLAG_RSPO = a2.FLAG_RSPO
	, a1.NRPEZZIIMBALLO = A2.NRPEZZIIMBALLO
--SELECT *
FROM EXTRAMAG a1 JOIN ZS_GENERAARTICOLI_POST Z ON a1.CODART = Z.NUOVOCODART 
JOIN EXTRAMAG a2 ON a2.CODART = Z.CODART
--WHERE 
--	a1.CODART = '20007#000000XXX'
--	AND a2.CODART = '20007#000XXX'
--	AND LEFT(a1.CODART , 1) = '2'


IF OBJECT_ID ('dbo.ITA_CALCOLO_PROVV') IS NOT NULL
	DROP FUNCTION dbo.ITA_CALCOLO_PROVV
GO

CREATE FUNCTION ITA_CALCOLO_PROVV(@ARTICOLO VARCHAR(50),@IMBALLO INT,@PESO DECIMAL(19,6),@PREZZO DECIMAL(19,6),@AGENTE VARCHAR(7) )
RETURNS @ITA_CALCOLO_PROVV TABLE
   (PROVVIGIONE 	DECIMAL (5, 2),
	PERCENTUALE 	INT,
	CALC_FASCIA 	DECIMAL (38, 14),
	MIN 			DECIMAL (19, 6),
	MAX 			DECIMAL (19, 6),
	FASCIA 			VARCHAR (7),
	WARNING_PREZZO	VARCHAR (1),
	PRV_VAR_ART 	SMALLINT,
	PRV_VAR_AGT 	SMALLINT,
	PRV_FIX_AGT 	DECIMAL(5,2),
	VAL_COL_A 		DECIMAL (19, 6),
	VAL_COL_B 		DECIMAL (19, 6),
	VAL_COL_C 		DECIMAL (19, 6),
	VAL_COL_D 		DECIMAL (19, 6),
	VAL_COL_E 		DECIMAL (19, 6),
	VAL_COL_F 		DECIMAL (19, 6),
	VAL_COL_G 		DECIMAL (19, 6),
	VAL_COL_H 		DECIMAL (19, 6),
	VAL_COL_I 		DECIMAL (19, 6),
	VAL_COL_L 		DECIMAL (19, 6),
	VAL_COL_M 		DECIMAL (19, 6),
	VAL_COL_N 		DECIMAL (19, 6),
	VAL_COL_O 		DECIMAL (19, 6),
	VAL_COL_P 		DECIMAL (19, 6),
	VAL_COL_Q 		DECIMAL (19, 6),
	VAL_COL_R 		DECIMAL (19, 6),
	VAL_COL_S 		DECIMAL (19, 6),
	VAL_COL_T 		DECIMAL (19, 6)
   ) AS
BEGIN 
	INSERT INTO @ITA_CALCOLO_PROVV  
	SELECT CASE 
				WHEN PRV_VAR_ART =0 AND PRV_VAR_AGT=0				  THEN 0.00
				WHEN FASCIA IN ('< MIN')							  THEN 0.50
				WHEN PRV_FIX_AGT >0			 						  THEN PRV_FIX_AGT
				WHEN FASCIA IN ('RB-MIN')  		   AND PRV_VAR_ART=1  THEN F_RB_MIN.FASCIA1 
		   		WHEN FASCIA IN ('RB-MIN')  		   AND PRV_VAR_ART=2  THEN F_RB_MIN.FASCIA2
		   		WHEN FASCIA IN ('RB-MIN')  		   AND PRV_VAR_ART=3  THEN F_RB_MIN.FASCIA3
		   		WHEN FASCIA IN ('RB-MIN')  		   AND PRV_VAR_ART=4  THEN F_RB_MIN.FASCIA4
		   		WHEN FASCIA IN ('RB-MIN')  		   AND PRV_VAR_ART=5  THEN F_RB_MIN.FASCIA5
		   		WHEN FASCIA IN ('RB-MIN')  		   AND PRV_VAR_ART=6  THEN F_RB_MIN.FASCIA6
		   		WHEN FASCIA IN ('RB-MIN')  		   AND PRV_VAR_ART=7  THEN F_RB_MIN.FASCIA7
		   		WHEN FASCIA IN ('RB-MIN')  		   AND PRV_VAR_ART=8  THEN F_RB_MIN.FASCIA8
		   		WHEN FASCIA IN ('RB-MIN')  		   AND PRV_VAR_ART=9  THEN F_RB_MIN.FASCIA9
		   		WHEN FASCIA IN ('RB-MIN')  		   AND PRV_VAR_ART=10 THEN F_RB_MIN.FASCIA10
		   		WHEN FASCIA IN ('> MAX','MIN-MAX') AND PRV_VAR_ART=1  THEN F_MIN_MAX.FASCIA1
		   		WHEN FASCIA IN ('> MAX','MIN-MAX') AND PRV_VAR_ART=2  THEN F_MIN_MAX.FASCIA2
		   		WHEN FASCIA IN ('> MAX','MIN-MAX') AND PRV_VAR_ART=3  THEN F_MIN_MAX.FASCIA3
		   		WHEN FASCIA IN ('> MAX','MIN-MAX') AND PRV_VAR_ART=4  THEN F_MIN_MAX.FASCIA4
		   		WHEN FASCIA IN ('> MAX','MIN-MAX') AND PRV_VAR_ART=5  THEN F_MIN_MAX.FASCIA5
		   		WHEN FASCIA IN ('> MAX','MIN-MAX') AND PRV_VAR_ART=6  THEN F_MIN_MAX.FASCIA6
		   		WHEN FASCIA IN ('> MAX','MIN-MAX') AND PRV_VAR_ART=7  THEN F_MIN_MAX.FASCIA7
		   		WHEN FASCIA IN ('> MAX','MIN-MAX') AND PRV_VAR_ART=8  THEN F_MIN_MAX.FASCIA8
		   		WHEN FASCIA IN ('> MAX','MIN-MAX') AND PRV_VAR_ART=9  THEN F_MIN_MAX.FASCIA9
		   		WHEN FASCIA IN ('> MAX','MIN-MAX') AND PRV_VAR_ART=10 THEN F_MIN_MAX.FASCIA10		   	   
	    		WHEN FASCIA IN ('RB-MIN')  		   AND PRV_VAR_AGT=1  THEN F_RB_MIN.FASCIA1
		   		WHEN FASCIA IN ('RB-MIN')		   AND PRV_VAR_AGT=2  THEN F_RB_MIN.FASCIA2
		   		WHEN FASCIA IN ('RB-MIN')  		   AND PRV_VAR_AGT=3  THEN F_RB_MIN.FASCIA3
		   		WHEN FASCIA IN ('RB-MIN')  		   AND PRV_VAR_AGT=4  THEN F_RB_MIN.FASCIA4
		   		WHEN FASCIA IN ('RB-MIN')  		   AND PRV_VAR_AGT=5  THEN F_RB_MIN.FASCIA5
		   		WHEN FASCIA IN ('RB-MIN')  		   AND PRV_VAR_AGT=6  THEN F_RB_MIN.FASCIA6
		   		WHEN FASCIA IN ('RB-MIN')  		   AND PRV_VAR_AGT=7  THEN F_RB_MIN.FASCIA7
		   		WHEN FASCIA IN ('RB-MIN')  		   AND PRV_VAR_AGT=8  THEN F_RB_MIN.FASCIA8
		   		WHEN FASCIA IN ('RB-MIN')  		   AND PRV_VAR_AGT=9  THEN F_RB_MIN.FASCIA9
		   		WHEN FASCIA IN ('RB-MIN')  		   AND PRV_VAR_AGT=10 THEN F_RB_MIN.FASCIA10
		   		WHEN FASCIA IN ('> MAX','MIN-MAX') AND PRV_VAR_AGT=1  THEN F_MIN_MAX.FASCIA1
		   		WHEN FASCIA IN ('> MAX','MIN-MAX') AND PRV_VAR_AGT=2  THEN F_MIN_MAX.FASCIA2
		   		WHEN FASCIA IN ('> MAX','MIN-MAX') AND PRV_VAR_AGT=3  THEN F_MIN_MAX.FASCIA3
		   		WHEN FASCIA IN ('> MAX','MIN-MAX') AND PRV_VAR_AGT=4  THEN F_MIN_MAX.FASCIA4
		   		WHEN FASCIA IN ('> MAX','MIN-MAX') AND PRV_VAR_AGT=5  THEN F_MIN_MAX.FASCIA5
		   		WHEN FASCIA IN ('> MAX','MIN-MAX') AND PRV_VAR_AGT=6  THEN F_MIN_MAX.FASCIA6
		   		WHEN FASCIA IN ('> MAX','MIN-MAX') AND PRV_VAR_AGT=7  THEN F_MIN_MAX.FASCIA7
		   		WHEN FASCIA IN ('> MAX','MIN-MAX') AND PRV_VAR_AGT=8  THEN F_MIN_MAX.FASCIA8
		   		WHEN FASCIA IN ('> MAX','MIN-MAX') AND PRV_VAR_AGT=9  THEN F_MIN_MAX.FASCIA9
		   		WHEN FASCIA IN ('> MAX','MIN-MAX') AND PRV_VAR_AGT=10 THEN F_MIN_MAX.FASCIA10
		   		ELSE -1.00 END PROVVIGIONE,V1.*
	FROM 
		((SELECT  CASE  WHEN FASCIA='< MIN' 				THEN (SELECT TOP 1 PERCENTUALE FROM ITA_TAB_FASCE_RB_MIN  ORDER BY PERCENTUALE ASC)
				 		WHEN FASCIA='RB-MIN'  AND MAX-MIN>0	THEN (SELECT TOP 1 PERCENTUALE FROM ITA_TAB_FASCE_RB_MIN  WHERE PERCENTUALE>=((MAX-@PREZZO)/(MAX-MIN))*100 ORDER BY PERCENTUALE ASC)
				 		WHEN FASCIA='> MAX' 				THEN (SELECT TOP 1 PERCENTUALE FROM ITA_TAB_FASCE_MIN_MAX ORDER BY PERCENTUALE ASC)
				 		WHEN FASCIA='MIN-MAX' AND MAX-MIN>0 THEN (SELECT TOP 1 PERCENTUALE FROM ITA_TAB_FASCE_MIN_MAX WHERE PERCENTUALE>=((MAX-@PREZZO)/(MAX-MIN))*100 ORDER BY PERCENTUALE ASC)
				 		ELSE 0 END AS PERCENTUALE,
				  CASE WHEN MAX-MIN>0  THEN ((MAX-@PREZZO)/(MAX-MIN))*100 ELSE 0 END AS CALC_FASCIA,
				  V2.*
		FROM 
			(SELECT	   CASE WHEN I.MERCE='B' AND @PESO>=20000 AND				  @PREZZO< T.VAL_COL_A THEN @PREZZO
							WHEN I.MERCE='B' AND @PESO>  5000 AND @PESO<20000 AND @PREZZO< T.VAL_COL_B THEN @PREZZO
							WHEN I.MERCE='B' AND @PESO<= 5000 AND 			      @PREZZO< T.VAL_COL_C THEN @PREZZO
							WHEN I.MERCE='B' AND @PESO>=20000 AND 				  @PREZZO< T.VAL_COL_D THEN T.VAL_COL_A
							WHEN I.MERCE='B' AND @PESO>  5000 AND @PESO<20000 AND @PREZZO< T.VAL_COL_E THEN T.VAL_COL_B
							WHEN I.MERCE='B' AND @PESO<= 5000 AND                 @PREZZO< T.VAL_COL_F THEN T.VAL_COL_C
							WHEN I.MERCE='B' AND @PESO>=20000 AND 				  @PREZZO<=T.VAL_COL_G THEN T.VAL_COL_D				
							WHEN I.MERCE='B' AND @PESO>  5000 AND @PESO<20000 AND @PREZZO<=T.VAL_COL_H THEN T.VAL_COL_E	
							WHEN I.MERCE='B' AND @PESO<= 5000 AND                 @PREZZO<=T.VAL_COL_I THEN T.VAL_COL_F 			
							WHEN I.MERCE='D' AND @PESO>= 5000 AND 				  @PREZZO< T.VAL_COL_L THEN @PREZZO
							WHEN I.MERCE='D' AND @PESO>= 3000 AND @PESO< 5000 AND @PREZZO< T.VAL_COL_M THEN @PREZZO
							WHEN I.MERCE='D' AND @PESO<  3000 AND                 @PREZZO< T.VAL_COL_N THEN @PREZZO
							WHEN I.MERCE='D' AND @PESO>= 5000 AND 				  @PREZZO< T.VAL_COL_O THEN T.VAL_COL_L
							WHEN I.MERCE='D' AND @PESO>= 3000 AND @PESO< 5000 AND @PREZZO< T.VAL_COL_P THEN T.VAL_COL_M
							WHEN I.MERCE='D' AND @PESO<  3000 AND                 @PREZZO< T.VAL_COL_Q THEN T.VAL_COL_N
							WHEN I.MERCE='D' AND @PESO>= 5000 AND 				  @PREZZO<=T.VAL_COL_R THEN T.VAL_COL_O				
							WHEN I.MERCE='D' AND @PESO>= 3000 AND @PESO< 5000 AND @PREZZO<=T.VAL_COL_S THEN T.VAL_COL_P	
							WHEN I.MERCE='D' AND @PESO<  3000 AND                 @PREZZO<=T.VAL_COL_T THEN T.VAL_COL_Q  
							ELSE 0 END AS MIN,
					   CASE WHEN I.MERCE='B' AND @PESO<= 5000 AND                 @PREZZO> T.VAL_COL_I THEN @PREZZO
							WHEN I.MERCE='B' AND @PESO>  5000 AND @PESO<20000 AND @PREZZO> T.VAL_COL_H THEN @PREZZO
							WHEN I.MERCE='B' AND @PESO>=20000 AND 				  @PREZZO> T.VAL_COL_G THEN @PREZZO
							WHEN I.MERCE='B' AND @PESO<= 5000 AND                 @PREZZO>=T.VAL_COL_F THEN T.VAL_COL_I
							WHEN I.MERCE='B' AND @PESO>  5000 AND @PESO<20000 AND @PREZZO>=T.VAL_COL_E THEN T.VAL_COL_H 
							WHEN I.MERCE='B' AND @PESO>=20000 AND 				  @PREZZO>=T.VAL_COL_D THEN T.VAL_COL_G				
							WHEN I.MERCE='B' AND @PESO<= 5000 AND                 @PREZZO>=T.VAL_COL_C THEN T.VAL_COL_F 			
							WHEN I.MERCE='B' AND @PESO>  5000 AND @PESO<20000 AND @PREZZO>=T.VAL_COL_B THEN T.VAL_COL_E 
							WHEN I.MERCE='B' AND @PESO>=20000 AND 				  @PREZZO>=T.VAL_COL_A THEN T.VAL_COL_D									
						   	WHEN I.MERCE='D' AND @PESO<  3000 AND                 @PREZZO> T.VAL_COL_T THEN @PREZZO 				
							WHEN I.MERCE='D' AND @PESO>= 3000 AND @PESO< 5000 AND @PREZZO> T.VAL_COL_S THEN @PREZZO	
							WHEN I.MERCE='D' AND @PESO>= 5000 AND 				  @PREZZO> T.VAL_COL_R THEN @PREZZO			
							WHEN I.MERCE='D' AND @PESO<  3000 AND                 @PREZZO>=T.VAL_COL_Q THEN T.VAL_COL_T
							WHEN I.MERCE='D' AND @PESO>= 3000 AND @PESO< 5000 AND @PREZZO>=T.VAL_COL_P THEN T.VAL_COL_S
							WHEN I.MERCE='D' AND @PESO>= 5000 AND 				  @PREZZO>=T.VAL_COL_O THEN T.VAL_COL_R			
							WHEN I.MERCE='D' AND @PESO<  3000 AND                 @PREZZO>=T.VAL_COL_N THEN T.VAL_COL_Q
							WHEN I.MERCE='D' AND @PESO>= 3000 AND @PESO< 5000 AND @PREZZO>=T.VAL_COL_M THEN T.VAL_COL_P
							WHEN I.MERCE='D' AND @PESO>= 5000 AND 				  @PREZZO>=T.VAL_COL_L THEN T.VAL_COL_O
							ELSE 0 END AS MAX,
					   CASE WHEN I.MERCE='B' AND @PESO>=20000 AND			      @PREZZO< T.VAL_COL_A THEN '< MIN'
							WHEN I.MERCE='B' AND @PESO>  5000 AND @PESO<20000 AND @PREZZO< T.VAL_COL_B THEN '< MIN'
							WHEN I.MERCE='B' AND @PESO<= 5000 AND 				  @PREZZO< T.VAL_COL_C THEN '< MIN'
							WHEN I.MERCE='B' AND @PESO>=20000 AND 				  @PREZZO< T.VAL_COL_D THEN 'RB-MIN'
							WHEN I.MERCE='B' AND @PESO>  5000 AND @PESO<20000 AND @PREZZO< T.VAL_COL_E THEN 'RB-MIN'
							WHEN I.MERCE='B' AND @PESO<= 5000 AND                 @PREZZO< T.VAL_COL_F THEN 'RB-MIN'
							WHEN I.MERCE='B' AND @PESO>=20000 AND 				  @PREZZO<=T.VAL_COL_G THEN 'MIN-MAX'				
							WHEN I.MERCE='B' AND @PESO>  5000 AND @PESO<20000 AND @PREZZO<=T.VAL_COL_H THEN 'MIN-MAX'	
							WHEN I.MERCE='B' AND @PESO<= 5000 AND                 @PREZZO<=T.VAL_COL_I THEN 'MIN-MAX'  
							WHEN I.MERCE='B' AND @PESO>=20000 AND 				  @PREZZO> T.VAL_COL_G THEN '> MAX'
							WHEN I.MERCE='B' AND @PESO>  5000 AND @PESO<20000 AND @PREZZO> T.VAL_COL_H THEN '> MAX'
							WHEN I.MERCE='B' AND @PESO<= 5000 AND                 @PREZZO> T.VAL_COL_I THEN '> MAX'															
							WHEN I.MERCE='D' AND @PESO>= 5000 AND 				  @PREZZO< T.VAL_COL_L THEN '< MIN'
							WHEN I.MERCE='D' AND @PESO>= 3000 AND @PESO< 5000 AND @PREZZO< T.VAL_COL_M THEN '< MIN'
							WHEN I.MERCE='D' AND @PESO<  3000 AND 				  @PREZZO< T.VAL_COL_N THEN '< MIN'
							WHEN I.MERCE='D' AND @PESO>= 5000 AND 				  @PREZZO< T.VAL_COL_O THEN 'RB-MIN'
							WHEN I.MERCE='D' AND @PESO>=  3000 AND @PESO< 5000 AND @PREZZO< T.VAL_COL_P THEN 'RB-MIN'
							WHEN I.MERCE='D' AND @PESO<  3000 AND                 @PREZZO< T.VAL_COL_Q THEN 'RB-MIN'
							WHEN I.MERCE='D' AND @PESO>= 5000 AND 				  @PREZZO<=T.VAL_COL_R THEN 'MIN-MAX'				
							WHEN I.MERCE='D' AND @PESO>= 3000 AND @PESO< 5000 AND @PREZZO<=T.VAL_COL_S THEN 'MIN-MAX'	
							WHEN I.MERCE='D' AND @PESO<  3000 AND                 @PREZZO<=T.VAL_COL_T THEN 'MIN-MAX'
							WHEN I.MERCE='D' AND @PESO>= 5000 AND 				  @PREZZO> T.VAL_COL_R THEN '> MAX' 
							WHEN I.MERCE='D' AND @PESO>= 3000 AND @PESO< 5000 AND @PREZZO> T.VAL_COL_S THEN '> MAX'				
							WHEN I.MERCE='D' AND @PESO<  3000 AND                 @PREZZO> T.VAL_COL_T THEN '> MAX' 																						
							ELSE '?' END AS FASCIA,
					   CASE WHEN I.MERCE='B' AND @PESO>=20000 AND			      @PREZZO< T.VAL_COL_A THEN 'S'
							WHEN I.MERCE='B' AND @PESO>= 5000 AND @PESO<20000 AND @PREZZO< T.VAL_COL_B THEN 'S'
							WHEN I.MERCE='B' AND @PESO<  5000 AND				  @PREZZO< T.VAL_COL_C THEN 'S'
							WHEN I.MERCE='D' AND @PESO>= 5000 AND 				  @PREZZO< T.VAL_COL_L THEN 'S'
							WHEN I.MERCE='D' AND @PESO>= 3000 AND @PESO< 5000 AND @PREZZO< T.VAL_COL_M THEN 'S'
							WHEN I.MERCE='D' AND @PESO<  3000 AND 				  @PREZZO< T.VAL_COL_N THEN 'S'
							ELSE 'N' END AS WARNING_PREZZO,
							ISNULL(XM.PRV_VAR,0) AS PRV_VAR_ART,
							ISNULL(XA.PRV_VAR,0) AS PRV_VAR_AGT,
							ISNULL(XA.PRV_FIX,0) AS PRV_FIX_AGT,
							VAL_COL_A,VAL_COL_B,VAL_COL_C,VAL_COL_D,VAL_COL_E,VAL_COL_F,VAL_COL_G,VAL_COL_H,VAL_COL_I,VAL_COL_L,VAL_COL_M,VAL_COL_N,VAL_COL_O,VAL_COL_P,VAL_COL_Q,VAL_COL_R,VAL_COL_S,VAL_COL_T
			FROM (EXTRAMAG XM LEFT OUTER JOIN ITA_TAB_DEFPROV T ON T.MACROARTICOLO=XM.MACRO_ART), 
			     (SELECT MERCE FROM TABIMBALLI WHERE codice=CAST(@IMBALLO AS VARCHAR)) AS I,
			     EXTRAAGENTI XA
			WHERE  XM.CODART=@ARTICOLO AND XA.CODAGENTE=@AGENTE
		) AS V2 
	)V1 LEFT OUTER JOIN ITA_TAB_FASCE_RB_MIN  F_RB_MIN  ON F_RB_MIN.PERCENTUALE=V1.PERCENTUALE )
		LEFT OUTER JOIN ITA_TAB_FASCE_MIN_MAX F_MIN_MAX ON F_MIN_MAX.PERCENTUALE=V1.PERCENTUALE

	RETURN
END
GO

GRANT REFERENCES ON dbo.ITA_CALCOLO_PROVV TO Metodo98
GO

GRANT SELECT ON dbo.ITA_CALCOLO_PROVV TO Metodo98
GO


-- aggiornamento descrizioni articoli
UPDATE B
SET B.descrizione = A.DESCRIZIONE + ' ' + v.DESCRIZIONE
FROM ZS_GENERAARTICOLI_POST z 
JOIN ANAGRAFICAARTICOLI a ON a.CODICE = z.codart
JOIN ANAGRAFICAARTICOLI b ON b.CODICE = z.NUOVOCODART
LEFT OUTER JOIN TABIMBALLI t ON t.CODICE = z.codice
LEFT OUTER JOIN tabvarianti v ON v.VARIANTE = RIGHT(z.NUOVOCODARt, 3)
WHERE v.TIPOLOGIA = '62'
GO










IF OBJECT_ID ('dbo.ZS_GENERAARTICOLI_GESTIONEPREZZI') IS NOT NULL
	DROP PROCEDURE dbo.ZS_GENERAARTICOLI_GESTIONEPREZZI
GO

CREATE PROCEDURE ZS_GENERAARTICOLI_GESTIONEPREZZI(@CODART VARCHAR(50), @OLDCODART VARCHAR(50)) AS

--	DECLARE @CODART VARCHAR(50)
--	DECLARE @OLDCODART VARCHAR(50)
	
--	SELECT @OLDCODART = '20505#013XXX'
--	SELECT @CODART = '20505#013000004'
	DECLARE @CSQL AS VARCHAR(5000)
	DECLARE @N AS SMALLINT
	DECLARE @NOMECAMPO AS VARCHAR(80)
	DECLARE @NOMETABELLA AS VARCHAR(80)
	
	DECLARE @PROGRESSIVO AS DECIMAL(10)
	DECLARE @IDRIGA DECIMAL(10)
	DECLARE @PPROG DECIMAL (10)
	DECLARE @PIDRIGA DECIMAL (10)
	DECLARE @IMBALLO AS VARCHAR(10)
	DECLARE @CODCLIFOR AS VARCHAR(7)
	
--	DELETE FROM GESTIONEPREZZI WHERE CODART = @CODART AND CODCLIFOR = 'C' AND INIZIOVALIDITA = FINEVALIDITA

	PRINT @CODART
	PRINT @OLDCODART
	PRINT RIGHT(@CODART, 3)


	DECLARE rSqlA CURSOR LOCAL KEYSET FOR 
	SELECT G.PROGRESSIVO, R.IDRIGA, r.COD_IMBALLO, g.CODCLIFOR
	FROM GESTIONEPREZZI g JOIN GESTIONEPREZZIRIGHE r ON g.PROGRESSIVO = r.RIFPROGRESSIVO
	JOIN TABIMBALLI T ON T.CODICE = R.COD_IMBALLO
	WHERE g.CODART = @OLDCODART AND T.VARIANTEIMBALLO = RIGHT(@CODART, 3)
	--AND charindex('?', g.codart) = 0
	--AND g.INIZIOVALIDITA = g.FINEVALIDITA  
	
	OPEN rSqlA

	FETCH NEXT from rSqlA INTO @PROGRESSIVO, @IDRIGA, @IMBALLO, @CODCLIFOR
	WHILE (@@FETCH_STATUS <> -1)
		BEGIN
		
			PRINT @PROGRESSIVO
			PRINT @IDRIGA
			PRINT '@IMBALLO: ' +  CAST(@IMBALLO AS VARCHAR)
			PRINT @CODCLIFOR
			
			SELECT @PPROG = 0

			SELECT TOP 1 @PPROG = X.PROGRESSIVO 
			FROM GESTIONEPREZZI X WHERE X.CODART = @CODART AND X.CODCLIFOR = @CODCLIFOR
			
			PRINT @PPROG
			
			IF (@PPROG = 0)
			BEGIN

				PRINT ' CREO LA CONDIZIONE DI PREZZO ' +  @CODART + ' CLIENTE ' + @CODCLIFOR
				EXECUTE dbo.NUOVOPROGRESSIVO 'GESTIONEPREZZI', 1, @PPROG OUT
				SELECT "@PPROG" = @PPROG
	
				INSERT INTO dbo.GESTIONEPREZZI (PROGRESSIVO, CODGRUPPOPREZZICF, CODCLIFOR, CODART, CODGRUPPOPREZZIMAG, INIZIOVALIDITA, FINEVALIDITA, USANRLISTINO, TIPOARROT, ARROTALIRE, ARROTAEURO, CODARTRIC, UTENTEMODIFICA, DATAMODIFICA, PROGRESSIVOCTR)
				SELECT @PPROG, CODGRUPPOPREZZICF, @CODCLIFOR, @CODART, CODGRUPPOPREZZIMAG, INIZIOVALIDITA, FINEVALIDITA, USANRLISTINO, TIPOARROT, ARROTALIRE, ARROTAEURO, @CODART, 'TRM', GETDATE(), PROGRESSIVOCTR
				FROM GESTIONEPREZZI 
				WHERE PROGRESSIVO = @PROGRESSIVO 
				--AND NOT EXISTS(SELECT 1 FROM GESTIONEPREZZI X WHERE X.CODART = @CODART) 
				
				--SET @PROGRESSIVO = @PPROG
	 		
			END
			
	 			   
	 		IF NOT EXISTS(SELECT 1 FROM GESTIONEPREZZIRIGHE X JOIN GESTIONEPREZZI XT ON XT.PROGRESSIVO = X.RIFPROGRESSIVO 
			WHERE XT.CODART = @CODART AND XT.CODCLIFOR = @CODCLIFOR AND X.COD_IMBALLO = @IMBALLO AND XT.PROGRESSIVO = @PPROG)
			
			BEGIN
				
				PRINT ' CREO LA CONDIZIONE NUOVA A PARTIRE DA @PROGRESSIVO ' + CAST(@PROGRESSIVO AS VARCHAR) + ' E @IDRIGA ' + CAST(@IDRIGA AS VARCHAR)
				
				SELECT IDRIGA, RIFPROGRESSIVO, NRLISTINO, UM, QTAMINIMA, PREZZO_MAGG, PREZZO_MAGGEURO, SCONTO_UNICO, SCONTO_AGGIUNTIVO, TIPO, UTENTEMODIFICA, DATAMODIFICA, TP_QTASCONTO, TP_QTACOEFF, COD_IMBALLO, QTA_COLLI
				FROM GESTIONEPREZZIRIGHE 
				WHERE RIFPROGRESSIVO = @PROGRESSIVO AND IDRIGA = @IDRIGA				
				
				EXECUTE dbo.NUOVOPROGRESSIVO 'GESTIONEPREZZIRIGHE', 1, @PIDRIGA OUT
				SELECT "@PIDRIGA" = @PIDRIGA  
						
				INSERT INTO dbo.GESTIONEPREZZIRIGHE (IDRIGA, RIFPROGRESSIVO, NRLISTINO, UM, QTAMINIMA, PREZZO_MAGG, PREZZO_MAGGEURO, SCONTO_UNICO, SCONTO_AGGIUNTIVO, TIPO, UTENTEMODIFICA, DATAMODIFICA, TP_QTASCONTO, TP_QTACOEFF, COD_IMBALLO, QTA_COLLI)
				SELECT @PIDRIGA, @PPROG, NRLISTINO, UM, QTAMINIMA, PREZZO_MAGG, PREZZO_MAGGEURO, SCONTO_UNICO, SCONTO_AGGIUNTIVO, TIPO, UTENTEMODIFICA, DATAMODIFICA, TP_QTASCONTO, TP_QTACOEFF, COD_IMBALLO, QTA_COLLI
				FROM GESTIONEPREZZIRIGHE 
				WHERE RIFPROGRESSIVO = @PPROG AND IDRIGA = @IDRIGA 
				
				PRINT ' ------------------------------------- '
			END		  	
			
			FETCH NEXT from rSqlA INTO @PROGRESSIVO, @IDRIGA, @IMBALLO, @CODCLIFOR
		END

	CLOSE rSqlA
	DEALLOCATE rSqlA
GO

GRANT EXECUTE ON dbo.ZS_GENERAARTICOLI_GESTIONEPREZZI TO Metodo98
GO






UPDATE 
relazionicfv
SET VARIANTI = replace(VARIANTI, 'XXX', '???')
WHERE right(varianti, 3) = 'XXX'

SELECT * FROM RELAZIONICFV WHERE right(varianti, 3) = '???'
