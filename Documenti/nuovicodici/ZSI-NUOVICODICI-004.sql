IF NOT EXISTS(SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'EXTRAMAG' AND COLUMN_NAME = 'IDOBJECTKNOS')
BEGIN
	ALTER TABLE EXTRAMAG ADD IDOBJECTKNOS DECIMAL(10) NOT NULL DEFAULT 0
END



IF OBJECT_ID ('dbo.ZS_KNOS_VISTAPUBBLICAZIONIARTICOLI') IS NOT NULL
	DROP VIEW dbo.ZS_KNOS_VISTAPUBBLICAZIONIARTICOLI
GO

CREATE VIEW ZS_KNOS_VISTAPUBBLICAZIONIARTICOLI AS
SELECT 
OO.IDOBJECT
, OI.VARCHAR_26 AS CODICE
, OI.VARCHAR_27 AS DESCRIZIONE 
FROM KNOS_ZSI..OBJECT_OBJECT OO JOIN KNOS_ZSI..OBJECT_INDEX OI ON OO.IDOBJECT = OI.IDOBJECT 
WHERE OO.IDCLASS = 5011 
AND OI.VARCHAR_26 <> ''
GO

GRANT SELECT ON dbo.ZS_KNOS_VISTAPUBBLICAZIONIARTICOLI TO Metodo98
GO



IF OBJECT_ID ('dbo.ZS_KNOS_PUBBLICAZIONIARTICOLI') IS NOT NULL
	DROP TABLE dbo.ZS_KNOS_PUBBLICAZIONIARTICOLI
GO

CREATE TABLE dbo.ZS_KNOS_PUBBLICAZIONIARTICOLI
	(
	IDOBJECT    INT NOT NULL,
	CODICE      NVARCHAR (200) NULL,
	DESCRIZIONE NVARCHAR (200) NULL,
	PRIMARY KEY (IDOBJECT)
	)
GO

GRANT DELETE ON dbo.ZS_KNOS_PUBBLICAZIONIARTICOLI TO Metodo98
GO

GRANT INSERT ON dbo.ZS_KNOS_PUBBLICAZIONIARTICOLI TO Metodo98
GO

GRANT REFERENCES ON dbo.ZS_KNOS_PUBBLICAZIONIARTICOLI TO Metodo98
GO

GRANT SELECT ON dbo.ZS_KNOS_PUBBLICAZIONIARTICOLI TO Metodo98
GO

GRANT UPDATE ON dbo.ZS_KNOS_PUBBLICAZIONIARTICOLI TO Metodo98
GO




DELETE ZS_KNOS_PUBBLICAZIONIARTICOLI
GO

INSERT INTO ZS_KNOS_PUBBLICAZIONIARTICOLI
	(
	IDOBJECT,
	CODICE,
	DESCRIZIONE
	)
SELECT IDOBJECT,Codice,Descrizione 
FROM ZS_KNOS_VISTAPUBBLICAZIONIARTICOLI
GO


SELECT E.IDOBJECTKNOS, KA.IDOBJECT, E.CODART, KA.*
--UPDATE E SET E.IDOBJECTKNOS = KA.IDOBJECT
FROM EXTRAMAG E , ZS_KNOS_PUBBLICAZIONIARTICOLI KA 
WHERE LEN(E.CODART) > 3  AND
(
(KA.CODICE = E.CODART)
OR
( KA.CODICE = LEFT(E.CODART, LEN(E.CODART) -3 ) + 'XXX')
OR
(PATINDEX(KA.CODICE + '%', E.CODART) > 0)-- AND KA.CODICE COLLATE SQL_Latin1_General_CP1_CI_AI = LEFT(E.CODART, CHARINDEX('#', E.CODART) -1 ) + 'XXX')
)




IF OBJECT_ID ('dbo.ITA_SP_UPDATE_REGISTRONOTIFICHEBSC') IS NOT NULL
	DROP PROCEDURE dbo.ITA_SP_UPDATE_REGISTRONOTIFICHEBSC
GO

CREATE PROCEDURE [dbo].[ITA_SP_UPDATE_REGISTRONOTIFICHEBSC]

AS

BEGIN

SET NOCOUNT ON

	INSERT INTO dbo.ITA_TABREGISTRONOTIFICHEBSC (CODCLIFOR, CODART, ARTICOLOBSC, CODLINGUA
	, IDOBJECT_CLI, IDOBJECT_ART, IDOBJECT_BOL, IDOBJECT_SCH
	, RAGIONESOCIALE, DESCRIZIONEARTICOLO
	, EMAIL_CLIENTE, EMAIL_AGENTE
	, IDDOC_BOL
	, FILENAME_BOL, CODICEDOCUMENTO_BOL, DATAULTIMOINVIO_BOL
	, IDDOC_SCH
	, FILENAME_SCH, CODICEDOCUMENTO_SCH, DATAULTIMOINVIO_SCH
	, STATOINVIO_BOL, STATOINVIO_SCH)
 	SELECT CODCLIFOR, CODART, isnull(ARTICOLOBSC, '')
		, '' AS CODLINGUA
		, 0 AS IDOBJECT_CLI
		, 0 AS IDOBJECT_ART
		, 0 AS IDOBJECT_BOL
		, 0 AS IDOBJECT_SCH
		, '' AS RAGIONESOCIALE
		, '' AS DESCRIZIONEARTICOLO
		, '' AS EMAIL_CLIENTE
		, '' AS EMAIL_AGENTE
		, 0 AS IDDOC_BOL
		, '' AS FILENAME_BOL
		, '' AS CODICEDOCUMENTO_BOL
		, NULL AS DATAULTIMOINVIO_BOL		
		, 0 AS IDDOC_SCH
		, '' AS FILENAME_SCH
		, '' AS CODICEDOCUMENTO_SCH
		, NULL AS DATAULTIMOINVIO_SCH
		, 0 AS STATOINVIO_BOL
		, 0 AS STATOINVIO_SCH
	FROM VistaRelazioniCFVdaDocZSI_BSC
	WHERE NOT EXISTS(SELECT 1 FROM ITA_TABREGISTRONOTIFICHEBSC X WHERE X.CODCLIFOR = VistaRelazioniCFVdaDocZSI_BSC.CODCLIFOR
	AND X.CODART = VistaRelazioniCFVdaDocZSI_BSC.CODART
	)

	UPDATE 
		X  
	SET 
		X.ARTICOLOBSC = isnull(I.ARTICOLOBSC, '')
		, X.DSCART_ALT = ISNULL(I.DSCART_ALT, '')
	FROM 
		ITA_TABREGISTRONOTIFICHEBSC X JOIN VistaRelazioniCFVdaDocZSI_BSC i
		ON i.CODCLIFOR = X.CODCLIFOR AND i.CODART = X.CODART

	UPDATE 
		ITA_TABREGISTRONOTIFICHEBSC
	SET 
		IDOBJECT_CLI = isnull((SELECT TOP 1 i.IdPubblicazioneKnos FROM ITA_ARCHIVIO_CLIFOR i WHERE i.CodConto = CODCLIFOR), 0)

	UPDATE 
		ITA_TABREGISTRONOTIFICHEBSC
	SET 
		--IDOBJECT_ART = isnull((SELECT TOP 1 i.IdPubblicazioneKnos FROM ITA_ARCHIVIO_ARTICOLI i WHERE i.CODICE = ARTICOLOBSC), 0)
		IDOBJECT_ART = isnull((SELECT TOP 1 i.IDOBJECTKNOS FROM EXTRAMAG i WHERE i.CODART = ARTICOLOBSC), 0)

	UPDATE 
		ITA_TABREGISTRONOTIFICHEBSC
	SET 
		DESCRIZIONEARTICOLO = (SELECT TOP 1 a.DESCRIZIONE FROM ANAGRAFICAARTICOLI A WHERE CODICE = ARTICOLOBSC)
	
	
	UPDATE  T 
	SET 
		T.RAGIONESOCIALE = a.DSCCONTO1,
		T.CODLINGUA = ISNULL(TN.DESCRIZIONELINGUA9, 'EN_')
	FROM 
		ITA_TABREGISTRONOTIFICHEBSC T JOIN ANAGRAFICACF A ON A.CODCONTO = T.CODCLIFOR
		JOIN TABNAZIONI TN ON A.CODNAZIONE = TN.CODICE
		
		
	UPDATE T 
	SET 
		T.IDDOC_BOL = ISNULL(bol.IDDOC, 0)
		, T.FILENAME_BOL = bol.FILENAME
		, T.IDOBJECT_BOL = bol.IDOBJECT_BOL
	FROM
		ITA_TABREGISTRONOTIFICHEBSC T JOIN Knos_ZSI.DBO.Metodo_View_LinkageBollettini bol 
		ON bol.IDOBJECT_ART = T.IDOBJECT_ART and bol.IDOBJECT_CLIFOR = 38750
	--WHERE
	--	t.IDDOC_BOL = 0
		


				
	UPDATE T 
	SET 
		T.IDDOC_BOL = ISNULL(bol.IDDOC, 0)
		, T.FILENAME_BOL = bol.FILENAME
		, T.IDOBJECT_BOL = bol.IDOBJECT_BOL
	FROM
		ITA_TABREGISTRONOTIFICHEBSC T JOIN Knos_ZSI.DBO.Metodo_View_LinkageBollettini bol 
		ON bol.IDOBJECT_ART = T.IDOBJECT_ART and bol.IDOBJECT_CLIFOR = T.IDOBJECT_CLI


	-- schede tecniche
	
	-- azzeramento
	UPDATE T 
	SET 
		T.IDDOC_SCH = 0
		, T.FILENAME_SCH = ''
		, T.IDOBJECT_SCH = 0
	FROM
		ITA_TABREGISTRONOTIFICHEBSC T
		
	UPDATE T 
	SET 
		T.IDDOC_SCH = ISNULL(bol.IDDOC, 0)
		, T.FILENAME_SCH = bol.FILENAME
		, T.IDOBJECT_SCH = bol.IDOBJECT_SCH
	FROM
		ITA_TABREGISTRONOTIFICHEBSC T JOIN Knos_ZSI.DBO.[Metodo_View_LinkageSchedeTecniche] bol 
		ON bol.IDOBJECT_ART = T.IDOBJECT_ART and bol.IDOBJECT_CLIFOR = 38750
	WHERE 
	   patindex(codlingua COLLATE Latin1_General_CI_AS + '%', bol.FileDescr) > 0
	   
	-- aggiornamento schede per clienti TUTTI esteri per i quali non esiste il file nella lingua corrispondente
	UPDATE T 
	SET 
		T.IDDOC_SCH = ISNULL(bol.IDDOC, 0)
		, T.FILENAME_SCH = bol.FILENAME
		, T.IDOBJECT_SCH = bol.IDOBJECT_SCH
	FROM
		ITA_TABREGISTRONOTIFICHEBSC T JOIN Knos_ZSI.DBO.[Metodo_View_LinkageSchedeTecniche] bol 
		ON bol.IDOBJECT_ART = T.IDOBJECT_ART and bol.IDOBJECT_CLIFOR = 38750
	WHERE codlingua <> 'IT_' 
	   and patindex('EN_' COLLATE Latin1_General_CI_AS + '%', bol.FileDescr) > 0
	 AND T.IDOBJECT_SCH = 0
	   	   
	-- aggiornamento schede per clienti per i quali esiste versione specifica
	UPDATE T 
	SET 
		T.IDDOC_SCH = ISNULL(bol.IDDOC, 0)
		, T.FILENAME_SCH = bol.FILENAME
		, T.IDOBJECT_SCH = bol.IDOBJECT_SCH
	FROM
		ITA_TABREGISTRONOTIFICHEBSC T JOIN Knos_ZSI.DBO.[Metodo_View_LinkageSchedeTecniche] bol 
		ON bol.IDOBJECT_ART = T.IDOBJECT_ART and bol.IDOBJECT_CLIFOR = T.IDOBJECT_CLI
	WHERE 
	   patindex(codlingua COLLATE Latin1_General_CI_AS + '%', bol.FileDescr) > 0
	   
	   
		
	UPDATE 
		ITA_TABREGISTRONOTIFICHEBSC
	SET 
		EMAIL_CLIENTE = [dbo].[fn_GetEMAILCONTATTICLIENTE](CODCLIFOR)
		
	
	UPDATE  T 
	SET 
		T.EMAIL_AGENTE = V.EMAIL_AGENTI
	FROM
		ITA_TABREGISTRONOTIFICHEBSC T JOIN VISTA_EMAILAGENTICLIENTE V
		ON T.CODCLIFOR = V.CODCONTO
			
			
RETURN

END
GO

GRANT EXECUTE ON dbo.ITA_SP_UPDATE_REGISTRONOTIFICHEBSC TO Metodo98
GO




IF OBJECT_ID ('dbo.ZS_VISTA_NOTIFICHEBSC') IS NOT NULL
	DROP VIEW dbo.ZS_VISTA_NOTIFICHEBSC
GO

CREATE view ZS_VISTA_NOTIFICHEBSC as 
SELECT 
	(CASE WHEN DATAULTIMOINVIO_SCH IS NULL THEN '' ELSE 'X' END) AS S,
	(CODCLIFOR + ' - ' + RAGIONESOCIALE) AS CLIENTE,
	CODART,
	DESCRIZIONEARTICOLO,
	DSCART_ALT AS DESCRIZIONE_ALTERNATIVA,
	EMAIL_CLIENTE,
	EMAIL_AGENTE,
	FILENAME_SCH,
	DATAULTIMOINVIO_SCH,
	CODICEDOCUMENTO_SCH,
	ARTICOLOBSC,
	CODLINGUA,
	CODCLIFOR,
	RAGIONESOCIALE,
	FILENAME_BOL,
	CODICEDOCUMENTO_BOL,
	DATAULTIMOINVIO_BOL,
	STATOINVIO_BOL,
	STATOINVIO_SCH,
	IDDOC_BOL,
	IDDOC_SCH,
	IDOBJECT_CLI,
	IDOBJECT_ART,
	IDOBJECT_BOL,
	IDOBJECT_SCH
FROM dbo.ITA_TABREGISTRONOTIFICHEBSC
GO

GRANT SELECT ON dbo.ZS_VISTA_NOTIFICHEBSC TO Metodo98
GO

IF OBJECT_ID ('dbo.ITA_SP_UPDATE_REGISTRONOTIFICHEBSC') IS NOT NULL
	DROP PROCEDURE dbo.ITA_SP_UPDATE_REGISTRONOTIFICHEBSC
GO

CREATE PROCEDURE [dbo].[ITA_SP_UPDATE_REGISTRONOTIFICHEBSC]

AS

BEGIN

SET NOCOUNT ON

	INSERT INTO dbo.ITA_TABREGISTRONOTIFICHEBSC (CODCLIFOR, CODART, ARTICOLOBSC, CODLINGUA
	, IDOBJECT_CLI, IDOBJECT_ART, IDOBJECT_BOL, IDOBJECT_SCH
	, RAGIONESOCIALE, DESCRIZIONEARTICOLO
	, EMAIL_CLIENTE, EMAIL_AGENTE
	, IDDOC_BOL
	, FILENAME_BOL, CODICEDOCUMENTO_BOL, DATAULTIMOINVIO_BOL
	, IDDOC_SCH
	, FILENAME_SCH, CODICEDOCUMENTO_SCH, DATAULTIMOINVIO_SCH
	, STATOINVIO_BOL, STATOINVIO_SCH)
 	SELECT CODCLIFOR, CODART, isnull(ARTICOLOBSC, '')
		, '' AS CODLINGUA
		, 0 AS IDOBJECT_CLI
		, 0 AS IDOBJECT_ART
		, 0 AS IDOBJECT_BOL
		, 0 AS IDOBJECT_SCH
		, '' AS RAGIONESOCIALE
		, '' AS DESCRIZIONEARTICOLO
		, '' AS EMAIL_CLIENTE
		, '' AS EMAIL_AGENTE
		, 0 AS IDDOC_BOL
		, '' AS FILENAME_BOL
		, '' AS CODICEDOCUMENTO_BOL
		, NULL AS DATAULTIMOINVIO_BOL		
		, 0 AS IDDOC_SCH
		, '' AS FILENAME_SCH
		, '' AS CODICEDOCUMENTO_SCH
		, NULL AS DATAULTIMOINVIO_SCH
		, 0 AS STATOINVIO_BOL
		, 0 AS STATOINVIO_SCH
	FROM VistaRelazioniCFVdaDocZSI_BSC
	WHERE NOT EXISTS(SELECT 1 FROM ITA_TABREGISTRONOTIFICHEBSC X WHERE X.CODCLIFOR = VistaRelazioniCFVdaDocZSI_BSC.CODCLIFOR
	AND X.CODART = VistaRelazioniCFVdaDocZSI_BSC.CODART
	)

	UPDATE 
		X  
	SET 
		X.ARTICOLOBSC = isnull(I.ARTICOLOBSC, '')
		, X.DSCART_ALT = I.DSCART_ALT
	FROM 
		ITA_TABREGISTRONOTIFICHEBSC X JOIN VistaRelazioniCFVdaDocZSI_BSC i
		ON i.CODCLIFOR = X.CODCLIFOR AND i.CODART = X.CODART

	UPDATE 
		ITA_TABREGISTRONOTIFICHEBSC
	SET 
		IDOBJECT_CLI = isnull((SELECT TOP 1 i.IdPubblicazioneKnos FROM ITA_ARCHIVIO_CLIFOR i WHERE i.CodConto = CODCLIFOR), 0)

	UPDATE 
		ITA_TABREGISTRONOTIFICHEBSC
	SET 
		--IDOBJECT_ART = isnull((SELECT TOP 1 i.IdPubblicazioneKnos FROM ITA_ARCHIVIO_ARTICOLI i WHERE i.CODICE = ARTICOLOBSC), 0)
		IDOBJECT_ART = isnull((SELECT TOP 1 i.IDOBJECTKNOS FROM EXTRAMAG i WHERE i.CODART = ARTICOLOBSC), 0)

	UPDATE 
		ITA_TABREGISTRONOTIFICHEBSC
	SET 
		DESCRIZIONEARTICOLO = (SELECT TOP 1 a.DESCRIZIONE FROM ANAGRAFICAARTICOLI A WHERE CODICE = ARTICOLOBSC)
	
	
	UPDATE  T 
	SET 
		T.RAGIONESOCIALE = a.DSCCONTO1,
		T.CODLINGUA = ISNULL(TN.DESCRIZIONELINGUA9, 'EN_')
	FROM 
		ITA_TABREGISTRONOTIFICHEBSC T JOIN ANAGRAFICACF A ON A.CODCONTO = T.CODCLIFOR
		JOIN TABNAZIONI TN ON A.CODNAZIONE = TN.CODICE
		
		
	UPDATE T 
	SET 
		T.IDDOC_BOL = ISNULL(bol.IDDOC, 0)
		, T.FILENAME_BOL = bol.FILENAME
		, T.IDOBJECT_BOL = bol.IDOBJECT_BOL
	FROM
		ITA_TABREGISTRONOTIFICHEBSC T JOIN Knos_ZSI.DBO.Metodo_View_LinkageBollettini bol 
		ON bol.IDOBJECT_ART = T.IDOBJECT_ART and bol.IDOBJECT_CLIFOR = 38750
	--WHERE
	--	t.IDDOC_BOL = 0
		


				
	UPDATE T 
	SET 
		T.IDDOC_BOL = ISNULL(bol.IDDOC, 0)
		, T.FILENAME_BOL = bol.FILENAME
		, T.IDOBJECT_BOL = bol.IDOBJECT_BOL
	FROM
		ITA_TABREGISTRONOTIFICHEBSC T JOIN Knos_ZSI.DBO.Metodo_View_LinkageBollettini bol 
		ON bol.IDOBJECT_ART = T.IDOBJECT_ART and bol.IDOBJECT_CLIFOR = T.IDOBJECT_CLI


	-- schede tecniche
	
	-- azzeramento
	UPDATE T 
	SET 
		T.IDDOC_SCH = 0
		, T.FILENAME_SCH = ''
		, T.IDOBJECT_SCH = 0
	FROM
		ITA_TABREGISTRONOTIFICHEBSC T
		
	UPDATE T 
	SET 
		T.IDDOC_SCH = ISNULL(bol.IDDOC, 0)
		, T.FILENAME_SCH = bol.FILENAME
		, T.IDOBJECT_SCH = bol.IDOBJECT_SCH
	FROM
		ITA_TABREGISTRONOTIFICHEBSC T JOIN Knos_ZSI.DBO.[Metodo_View_LinkageSchedeTecniche] bol 
		ON bol.IDOBJECT_ART = T.IDOBJECT_ART and bol.IDOBJECT_CLIFOR = 38750
	WHERE 
	   patindex(codlingua COLLATE Latin1_General_CI_AS + '%', bol.FileDescr) > 0
	   
	-- aggiornamento schede per clienti TUTTI esteri per i quali non esiste il file nella lingua corrispondente
	UPDATE T 
	SET 
		T.IDDOC_SCH = ISNULL(bol.IDDOC, 0)
		, T.FILENAME_SCH = bol.FILENAME
		, T.IDOBJECT_SCH = bol.IDOBJECT_SCH
	FROM
		ITA_TABREGISTRONOTIFICHEBSC T JOIN Knos_ZSI.DBO.[Metodo_View_LinkageSchedeTecniche] bol 
		ON bol.IDOBJECT_ART = T.IDOBJECT_ART and bol.IDOBJECT_CLIFOR = 38750
	WHERE codlingua <> 'IT_' 
	   and patindex('EN_' COLLATE Latin1_General_CI_AS + '%', bol.FileDescr) > 0
	   AND T.IDOBJECT_SCH = 0
	   	   
	-- aggiornamento schede per clienti per i quali esiste versione specifica
	UPDATE T 
	SET 
		T.IDDOC_SCH = ISNULL(bol.IDDOC, 0)
		, T.FILENAME_SCH = bol.FILENAME
		, T.IDOBJECT_SCH = bol.IDOBJECT_SCH
	FROM
		ITA_TABREGISTRONOTIFICHEBSC T JOIN Knos_ZSI.DBO.[Metodo_View_LinkageSchedeTecniche] bol 
		ON bol.IDOBJECT_ART = T.IDOBJECT_ART and bol.IDOBJECT_CLIFOR = T.IDOBJECT_CLI
	WHERE 
	   patindex(codlingua COLLATE Latin1_General_CI_AS + '%', bol.FileDescr) > 0
	   
	   
		
	UPDATE 
		ITA_TABREGISTRONOTIFICHEBSC
	SET 
		EMAIL_CLIENTE = [dbo].[fn_GetEMAILCONTATTICLIENTE](CODCLIFOR)
		
	
	UPDATE  T 
	SET 
		T.EMAIL_AGENTE = V.EMAIL_AGENTI
	FROM
		ITA_TABREGISTRONOTIFICHEBSC T JOIN VISTA_EMAILAGENTICLIENTE V
		ON T.CODCLIFOR = V.CODCONTO
			
			
RETURN

END
GO

GRANT EXECUTE ON dbo.ITA_SP_UPDATE_REGISTRONOTIFICHEBSC TO Metodo98
GO


EXEC ITA_SP_UPDATE_REGISTRONOTIFICHEBSC